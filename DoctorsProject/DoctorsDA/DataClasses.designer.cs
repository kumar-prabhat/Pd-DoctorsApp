#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoctorsProject.DoctorsDA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyDoctorsProject")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    partial void InsertDoctorDetail(DoctorDetail instance);
    partial void UpdateDoctorDetail(DoctorDetail instance);
    partial void DeleteDoctorDetail(DoctorDetail instance);
    partial void InsertPatientDetail(PatientDetail instance);
    partial void UpdatePatientDetail(PatientDetail instance);
    partial void DeletePatientDetail(PatientDetail instance);
    partial void InsertTreatment(Treatment instance);
    partial void UpdateTreatment(Treatment instance);
    partial void DeleteTreatment(Treatment instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::DoctorsProject.Properties.Settings.Default.MyDoctorsProjectConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BillingDetail> BillingDetails
		{
			get
			{
				return this.GetTable<BillingDetail>();
			}
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
		
		public System.Data.Linq.Table<DoctorDetail> DoctorDetails
		{
			get
			{
				return this.GetTable<DoctorDetail>();
			}
		}
		
		public System.Data.Linq.Table<Hospital> Hospitals
		{
			get
			{
				return this.GetTable<Hospital>();
			}
		}
		
		public System.Data.Linq.Table<PatientDetail> PatientDetails
		{
			get
			{
				return this.GetTable<PatientDetail>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Treatment> Treatments
		{
			get
			{
				return this.GetTable<Treatment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingDetails")]
	public partial class BillingDetail
	{
		
		private System.Guid _Id;
		
		private System.Guid _TreatmentId;
		
		private string _TreatmentDescription;
		
		private string _PatientName;
		
		private string _PatientAddress;
		
		private string _PhoneNumber;
		
		private int _Charges;
		
		private int _Total;
		
		private System.Nullable<int> _StatusId;
		
		private System.DateTime _CreatedDate;
		
		public BillingDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TreatmentId
		{
			get
			{
				return this._TreatmentId;
			}
			set
			{
				if ((this._TreatmentId != value))
				{
					this._TreatmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentDescription", DbType="NVarChar(150)")]
		public string TreatmentDescription
		{
			get
			{
				return this._TreatmentDescription;
			}
			set
			{
				if ((this._TreatmentDescription != value))
				{
					this._TreatmentDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientName", DbType="NVarChar(50)")]
		public string PatientName
		{
			get
			{
				return this._PatientName;
			}
			set
			{
				if ((this._PatientName != value))
				{
					this._PatientName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientAddress", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string PatientAddress
		{
			get
			{
				return this._PatientAddress;
			}
			set
			{
				if ((this._PatientAddress != value))
				{
					this._PatientAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charges", DbType="Int NOT NULL")]
		public int Charges
		{
			get
			{
				return this._Charges;
			}
			set
			{
				if ((this._Charges != value))
				{
					this._Charges = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Int NOT NULL")]
		public int Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this._StatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Booking")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _TreatmentId;
		
		private System.Guid _PatientId;
		
		private string _Subject;
		
		private string _Description;
		
		private System.DateTime _BookingSlot;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.Guid> _DoctorId;
		
		private System.Nullable<System.DateTime> _BookingDate;
		
		private System.Nullable<int> _StatusId;
		
		private System.Nullable<System.Guid> _HospitalId;
		
		private EntityRef<PatientDetail> _PatientDetail;
		
		private EntityRef<Treatment> _Treatment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTreatmentIdChanging(System.Guid value);
    partial void OnTreatmentIdChanged();
    partial void OnPatientIdChanging(System.Guid value);
    partial void OnPatientIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBookingSlotChanging(System.DateTime value);
    partial void OnBookingSlotChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDoctorIdChanging(System.Nullable<System.Guid> value);
    partial void OnDoctorIdChanged();
    partial void OnBookingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookingDateChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnHospitalIdChanging(System.Nullable<System.Guid> value);
    partial void OnHospitalIdChanged();
    #endregion
		
		public Booking()
		{
			this._PatientDetail = default(EntityRef<PatientDetail>);
			this._Treatment = default(EntityRef<Treatment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TreatmentId
		{
			get
			{
				return this._TreatmentId;
			}
			set
			{
				if ((this._TreatmentId != value))
				{
					if (this._Treatment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTreatmentIdChanging(value);
					this.SendPropertyChanging();
					this._TreatmentId = value;
					this.SendPropertyChanged("TreatmentId");
					this.OnTreatmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					if (this._PatientDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingSlot", DbType="DateTime NOT NULL")]
		public System.DateTime BookingSlot
		{
			get
			{
				return this._BookingSlot;
			}
			set
			{
				if ((this._BookingSlot != value))
				{
					this.OnBookingSlotChanging(value);
					this.SendPropertyChanging();
					this._BookingSlot = value;
					this.SendPropertyChanged("BookingSlot");
					this.OnBookingSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DoctorId
		{
			get
			{
				return this._DoctorId;
			}
			set
			{
				if ((this._DoctorId != value))
				{
					this.OnDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._DoctorId = value;
					this.SendPropertyChanged("DoctorId");
					this.OnDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BookingDate
		{
			get
			{
				return this._BookingDate;
			}
			set
			{
				if ((this._BookingDate != value))
				{
					this.OnBookingDateChanging(value);
					this.SendPropertyChanging();
					this._BookingDate = value;
					this.SendPropertyChanged("BookingDate");
					this.OnBookingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> HospitalId
		{
			get
			{
				return this._HospitalId;
			}
			set
			{
				if ((this._HospitalId != value))
				{
					this.OnHospitalIdChanging(value);
					this.SendPropertyChanging();
					this._HospitalId = value;
					this.SendPropertyChanged("HospitalId");
					this.OnHospitalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Booking", Storage="_PatientDetail", ThisKey="PatientId", OtherKey="Id", IsForeignKey=true)]
		public PatientDetail PatientDetail
		{
			get
			{
				return this._PatientDetail.Entity;
			}
			set
			{
				PatientDetail previousValue = this._PatientDetail.Entity;
				if (((previousValue != value) 
							|| (this._PatientDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PatientDetail.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._PatientDetail.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._PatientId = value.Id;
					}
					else
					{
						this._PatientId = default(System.Guid);
					}
					this.SendPropertyChanged("PatientDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Treatment_Booking", Storage="_Treatment", ThisKey="TreatmentId", OtherKey="Id", IsForeignKey=true)]
		public Treatment Treatment
		{
			get
			{
				return this._Treatment.Entity;
			}
			set
			{
				Treatment previousValue = this._Treatment.Entity;
				if (((previousValue != value) 
							|| (this._Treatment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Treatment.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Treatment.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._TreatmentId = value.Id;
					}
					else
					{
						this._TreatmentId = default(System.Guid);
					}
					this.SendPropertyChanged("Treatment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoctorDetails")]
	public partial class DoctorDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _DName;
		
		private string _DAddress;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Gender;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<int> _YearOfExperience;
		
		private string _Treatments;
		
		private System.Nullable<int> _BaseCharge;
		
		private string _Designation;
		
		private string _Qualifications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDNameChanging(string value);
    partial void OnDNameChanged();
    partial void OnDAddressChanging(string value);
    partial void OnDAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnYearOfExperienceChanging(System.Nullable<int> value);
    partial void OnYearOfExperienceChanged();
    partial void OnTreatmentsChanging(string value);
    partial void OnTreatmentsChanged();
    partial void OnBaseChargeChanging(System.Nullable<int> value);
    partial void OnBaseChargeChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnQualificationsChanging(string value);
    partial void OnQualificationsChanged();
    #endregion
		
		public DoctorDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DName
		{
			get
			{
				return this._DName;
			}
			set
			{
				if ((this._DName != value))
				{
					this.OnDNameChanging(value);
					this.SendPropertyChanging();
					this._DName = value;
					this.SendPropertyChanged("DName");
					this.OnDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAddress", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string DAddress
		{
			get
			{
				return this._DAddress;
			}
			set
			{
				if ((this._DAddress != value))
				{
					this.OnDAddressChanging(value);
					this.SendPropertyChanging();
					this._DAddress = value;
					this.SendPropertyChanged("DAddress");
					this.OnDAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(20)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOfExperience", DbType="Int")]
		public System.Nullable<int> YearOfExperience
		{
			get
			{
				return this._YearOfExperience;
			}
			set
			{
				if ((this._YearOfExperience != value))
				{
					this.OnYearOfExperienceChanging(value);
					this.SendPropertyChanging();
					this._YearOfExperience = value;
					this.SendPropertyChanged("YearOfExperience");
					this.OnYearOfExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Treatments", DbType="NVarChar(100)")]
		public string Treatments
		{
			get
			{
				return this._Treatments;
			}
			set
			{
				if ((this._Treatments != value))
				{
					this.OnTreatmentsChanging(value);
					this.SendPropertyChanging();
					this._Treatments = value;
					this.SendPropertyChanged("Treatments");
					this.OnTreatmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCharge", DbType="Int")]
		public System.Nullable<int> BaseCharge
		{
			get
			{
				return this._BaseCharge;
			}
			set
			{
				if ((this._BaseCharge != value))
				{
					this.OnBaseChargeChanging(value);
					this.SendPropertyChanging();
					this._BaseCharge = value;
					this.SendPropertyChanged("BaseCharge");
					this.OnBaseChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(50)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualifications", DbType="NVarChar(100)")]
		public string Qualifications
		{
			get
			{
				return this._Qualifications;
			}
			set
			{
				if ((this._Qualifications != value))
				{
					this.OnQualificationsChanging(value);
					this.SendPropertyChanging();
					this._Qualifications = value;
					this.SendPropertyChanged("Qualifications");
					this.OnQualificationsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hospital")]
	public partial class Hospital
	{
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Website;
		
		public Hospital()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(50)")]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this._Website = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientDetails")]
	public partial class PatientDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _PName;
		
		private string _PAddress;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Gender;
		
		private System.Nullable<int> _Age;
		
		private string _Password;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPNameChanging(string value);
    partial void OnPNameChanged();
    partial void OnPAddressChanging(string value);
    partial void OnPAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public PatientDetail()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this.OnPNameChanging(value);
					this.SendPropertyChanging();
					this._PName = value;
					this.SendPropertyChanged("PName");
					this.OnPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAddress", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PAddress
		{
			get
			{
				return this._PAddress;
			}
			set
			{
				if ((this._PAddress != value))
				{
					this.OnPAddressChanging(value);
					this.SendPropertyChanging();
					this._PAddress = value;
					this.SendPropertyChanged("PAddress");
					this.OnPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(20)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PatientDetail_Booking", Storage="_Bookings", ThisKey="Id", OtherKey="PatientId")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.PatientDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	public partial class Rating
	{
		
		private System.Guid _Id;
		
		private System.Guid _BookingId;
		
		private string _GivenBy;
		
		private System.Nullable<int> _RatingValue;
		
		public Rating()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookingId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid BookingId
		{
			get
			{
				return this._BookingId;
			}
			set
			{
				if ((this._BookingId != value))
				{
					this._BookingId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GivenBy
		{
			get
			{
				return this._GivenBy;
			}
			set
			{
				if ((this._GivenBy != value))
				{
					this._GivenBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingValue", DbType="Int")]
		public System.Nullable<int> RatingValue
		{
			get
			{
				return this._RatingValue;
			}
			set
			{
				if ((this._RatingValue != value))
				{
					this._RatingValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff
	{
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private System.Guid _PositionId;
		
		private System.Guid _HospitalId;
		
		public Staff()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(10)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PositionId
		{
			get
			{
				return this._PositionId;
			}
			set
			{
				if ((this._PositionId != value))
				{
					this._PositionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HospitalId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HospitalId
		{
			get
			{
				return this._HospitalId;
			}
			set
			{
				if ((this._HospitalId != value))
				{
					this._HospitalId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Treatment")]
	public partial class Treatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _TreatmentName;
		
		private string _Description;
		
		private int _Price;
		
		private bool _AvailabilityStatus;
		
		private System.Nullable<int> _TreatmentDurationInHours;
		
		private System.Nullable<int> _DurationInHrs;
		
		private EntitySet<Booking> _Bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTreatmentNameChanging(string value);
    partial void OnTreatmentNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnAvailabilityStatusChanging(bool value);
    partial void OnAvailabilityStatusChanged();
    partial void OnTreatmentDurationInHoursChanging(System.Nullable<int> value);
    partial void OnTreatmentDurationInHoursChanged();
    partial void OnDurationInHrsChanging(System.Nullable<int> value);
    partial void OnDurationInHrsChanged();
    #endregion
		
		public Treatment()
		{
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TreatmentName
		{
			get
			{
				return this._TreatmentName;
			}
			set
			{
				if ((this._TreatmentName != value))
				{
					this.OnTreatmentNameChanging(value);
					this.SendPropertyChanging();
					this._TreatmentName = value;
					this.SendPropertyChanged("TreatmentName");
					this.OnTreatmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailabilityStatus", DbType="Bit NOT NULL")]
		public bool AvailabilityStatus
		{
			get
			{
				return this._AvailabilityStatus;
			}
			set
			{
				if ((this._AvailabilityStatus != value))
				{
					this.OnAvailabilityStatusChanging(value);
					this.SendPropertyChanging();
					this._AvailabilityStatus = value;
					this.SendPropertyChanged("AvailabilityStatus");
					this.OnAvailabilityStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentDurationInHours", DbType="Int")]
		public System.Nullable<int> TreatmentDurationInHours
		{
			get
			{
				return this._TreatmentDurationInHours;
			}
			set
			{
				if ((this._TreatmentDurationInHours != value))
				{
					this.OnTreatmentDurationInHoursChanging(value);
					this.SendPropertyChanging();
					this._TreatmentDurationInHours = value;
					this.SendPropertyChanged("TreatmentDurationInHours");
					this.OnTreatmentDurationInHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationInHrs", DbType="Int")]
		public System.Nullable<int> DurationInHrs
		{
			get
			{
				return this._DurationInHrs;
			}
			set
			{
				if ((this._DurationInHrs != value))
				{
					this.OnDurationInHrsChanging(value);
					this.SendPropertyChanging();
					this._DurationInHrs = value;
					this.SendPropertyChanged("DurationInHrs");
					this.OnDurationInHrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Treatment_Booking", Storage="_Bookings", ThisKey="Id", OtherKey="TreatmentId")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Treatment = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.Treatment = null;
		}
	}
}
#pragma warning restore 1591
